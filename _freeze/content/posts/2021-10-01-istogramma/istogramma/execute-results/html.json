{
  "hash": "9360d83c13f289d6fbb683d289682066",
  "result": {
    "markdown": "---\ntitle: \"Istogramma\"\ndescription: |\n  La rappresentazione grafica della distribuzione dei dati.\nauthor:\n  - name: Corrado Caudek\n    url: {}\ndate: 10-01-2021\noutput:\n  distill::distill_article:\n    self_contained: false\ncategories:\n  - L-24\n  - Psicometria\n  - teaching\n---\n\n\n\n\n\n# Obiettivi di questo tutorial {-}\n\nIn questo tutorial ci poniamo il problema di costruire un istrogramma utilizzando la  funzione `ggplot()` del pacchetto `ggplot2` in R. Vedremo quali sono i limiti degli istogrammi. Concluderemo introducendo una rappresentazione alternativa, la *densità della frequenza dei dati*, la quale attenua i limiti degli istogrammi.\n\n# Carichiamo i pacchetti necessari\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(\"tidyverse\")) \ntheme_set(bayesplot::theme_default(base_size=14))\nsuppressPackageStartupMessages(library(\"knitr\"))\nsuppressPackageStartupMessages(library(\"kableExtra\"))\nsuppressPackageStartupMessages(library(\"patchwork\"))\ntable_nums <- captioner::captioner(prefix = \"Tavola\")\nfigure_nums <- captioner::captioner(prefix = \"Figura\")\nknitr::opts_chunk$set(fig.align = \"center\", fig.width=6, fig.height=4)\n```\n:::\n\n\n# Introduzione\n\nIniziamo con delle considerazioni di base.  \n\nL'intervallo `(a, b]` si dice __aperto a sinistra e chiuso a destra__. Significa \n\n$$\na < x \\leq b,\n$$\n\novvero, descrive la situazione nella quale i valori che coincidono con il limite superiore dell'intervallo verranno inclusi nell'intervallo, mentre i valori che coincidono con il limte inferiore dell'intervanno non verranno inclusi nell'intervallo.\n\nConsideriamo questi dati:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- c(1, 2, 1, 1, 5, 3, 2, 6)\n```\n:::\n\n\nSupponiamo di volere i seguenti intervalli aperti a sinistra e chiusi a destra:\n\n- (0, 2]\n- (2, 4]\n- (4, 6]\n- (6, 8]\n\nPer la variabile `x`, la distribuzione di frequenze assolute diventa:\n\n| Intervallo | frequenza |\n|------------|-----------|\n| (0, 2] | 5 |\n| (2, 4] | 1 |\n| (4, 6] | 2 |\n| (6, 8] | 0 |\n\nSe invece consideriamo gli intervalli chiusi a sinistra e aperti a destra, `[a, b)`, ovvero\n\n$$\na \\leq x < b,\n$$\n\nallora otteniamo una diversa distribuzione di frequenze assolute:\n\n| Intervallo | frequenza |\n|------------|-----------|\n| [0, 2) | 3 |\n| [2, 4) | 3 |\n| [4, 6) | 1 |\n| [6, 8) | 1 |\n\nUsiamo ora R per ottenere i risultati precedenti.  \n\nUno dei modi possibili per calcolare le frequenze assolute è quello di usare la funzione `cut()`. Mediante tal funzione è possibile dividere il *campo di variazione* (ovvero, la differenza tra il valore massimo di una distribuzione ed il valore minimo) di una variabile continua `x` in intervalli e codificare ciascun valore `x` nei termini dell'intervallo a cui appartiene. \n\nIniziamo con gli intervalli aperti a sinistra e chiusi a destra:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx_cat <- cut(\n  x,\n  breaks = c(0, 2, 4, 6, 8),\n  right = TRUE\n)\n```\n:::\n\n\nPossiamo ora usare la funzione `table()` la quale ritorna una tabella con le frequenze assolute di ciascuna modalità della variabile in input.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(x_cat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nx_cat\n(0,2] (2,4] (4,6] (6,8] \n    5     1     2     0 \n```\n:::\n:::\n\n\n\nLa distribuzione di frequenze per intervalli chiusi a sinistra e aperti a destra è:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx_cat <- cut(\n  x,\n  breaks = c(0, 2, 4, 6, 8),\n  right = FALSE\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(x_cat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nx_cat\n[0,2) [2,4) [4,6) [6,8) \n    3     3     1     1 \n```\n:::\n:::\n\n\n\n## Istogramma\n\nCreiamo ora un istogramma usando i valori `x`.\n\nQual è l'altezza della barra in corrispondeza dell'intervallo (0,2]?\n\nLa base è pari a 2 e l'area è 5/8. Dunque l'altezza è \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(5/8) / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3125\n```\n:::\n:::\n\n\nUsiamo `ggplot()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx %>% \n  as.data.frame() %>% \n  ggplot(aes(x = x)) +\n  geom_histogram(\n    aes(y = ..density..),\n    breaks = c(0, 2, 4, 6, 8) \n  ) \n```\n\n::: {.cell-output-display}\n![](istogramma_files/figure-html/unnamed-chunk-8-1.svg){fig-align='center'}\n:::\n:::\n\n\nQuesto ci conferma che, di default, `ggplot()` usa intervalli chiusi a destra.\n\nCambiamo ora il default e specifichiamo intervalli chiusi a sinistra:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx %>% \n  as.data.frame() %>% \n  ggplot(aes(x = x)) +\n  geom_histogram(\n    aes(y = ..density..),\n    breaks = c(0, 2, 4, 6, 8),\n    closed = \"left\"\n  ) \n```\n\n::: {.cell-output-display}\n![](istogramma_files/figure-html/unnamed-chunk-9-1.svg){fig-align='center'}\n:::\n:::\n\n\n\n\n# Manipolazione dei dati (importazione e pulizia)\n\nConsidereremo ora i dati di Zetsche, Bürkner, & Renneberg (2020) e ci poniamo il problema di descrivere la distribuzione dei punteggi BDI-II dei 67 partecipanti.  Uno di essi non ha risposto e quindi c'è un dato mancante.\n\nCreiamo la varibile `bdi` che contiene i valori del valore BDI-II dei 66 soggetti:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbysubj <- data.frame(\nbdi <- c(\n  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,\n  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3, 3,  5,  7,  9, 12, 19,\n  22, 22, 24, 25, 25, 26, 26, 26, 27, 27, 28, 28, 30, 30, 30, 31, 31, 33,\n  33, 34, 35, 35, 35, 36, 39, 41, 43, 43, 44\n  )\n)\n```\n:::\n\n\n\n# Calcolo delle frequenze assolute\n\nI seguenti cut-off vengono usati per interpretare il BDI‐II: \n\n- depressione minima = 0 -- 13, \n- depressione lieve = 14 -- 19, \n- depressione moderata = 20 -- 28,\n- depressione severa = 29 -- 63. \n\nCalcoliamo le frequenze assolute per i seguenti intervalli aperti a destra: [0, 13.5), [13.5, 19.5), [19.5, 28.5), [28.5, 63). Esaminando i dati, vediamo che 36 soggetti cadono nella prima classe. Dobbiamo però eseguire quest'operazione di conteggio utilizzando R. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbysubj$bdi_level <- cut(\n  bysubj$bdi,\n  breaks = c(0, 13.5, 19.5, 28.5, 63),\n  include.lowest = TRUE,\n  labels = c(\n    \"minimal\", \"mild\", \"moderate\", \"severe\"\n  )\n)\n\nbysubj$bdi_level\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] minimal  minimal  minimal  minimal  minimal  minimal  minimal  minimal \n [9] minimal  minimal  minimal  minimal  minimal  minimal  minimal  minimal \n[17] minimal  minimal  minimal  minimal  minimal  minimal  minimal  minimal \n[25] minimal  minimal  minimal  minimal  minimal  minimal  minimal  minimal \n[33] minimal  minimal  minimal  minimal  mild     moderate moderate moderate\n[41] moderate moderate moderate moderate moderate moderate moderate moderate\n[49] moderate severe   severe   severe   severe   severe   severe   severe  \n[57] severe   severe   severe   severe   severe   severe   severe   severe  \n[65] severe   severe  \nLevels: minimal mild moderate severe\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(bysubj$bdi_level)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n minimal     mild moderate   severe \n      36        1       12       17 \n```\n:::\n:::\n\n\nPer ottenere le frequenze relative è sufficiente dividere ciascuna frequenza assoluta per il numero totale di osservazioni:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(bysubj$bdi_level) / sum(table(bysubj$bdi_level))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   minimal       mild   moderate     severe \n0.54545455 0.01515152 0.18181818 0.25757576 \n```\n:::\n:::\n\n\nIn questo modo abbiamo ottenuto le distribuzioni di frequenza assoluta e relativa.\n\nLimiti delle classi Frequenza assoluta Frequenza relativa \n------------------- ------------------ ------------------\n[0, 13.5)              36                    36/66\n[13.5, 19.5)           1                     1/66\n[19.5, 28.5)           12                    12/66\n[28.5, 63]             17                    17/66\n\n\n# Istogramma\n\nL'istogramma delle frequenze assolute disegna un rettangolo sopra ogni intervallo specificato, la cui altezza corrisponde alla frequenza assoluta della classe. Per esempio, alla classe [0, 13.5] abbiamo associato la frequenza assoluta di 36.  Nell'istogramma delle frequenze assolute l'altezza del primo rettangolo sarà dunque uguale a 36. \n\nNell'istogramma delle frequenze relative viene invece rappresentata la frequenza relativa delle classi: l'area di ogni rettangolo è proporzionale alla frequenza relativa della classe. Come si trova l'altezza delle barre dell'istogramma in tali circostanze? Per la classe [0, 13.5), ad esempio, la frequenza relativa è 36/66. Tale valore corrisponde all'area del rettangolo.  Dato che la base del rettangolo è 13.5, l'altezza sarà 36/66 / 13.5, ovvero {r 36/66 / 13.5}. E così via per le altre barre dell'istogramma.\n\n\n## Visualizzazione con `ggplot()`\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1 <- bysubj %>% \n  ggplot(aes(x = bdi)) +\n  geom_histogram(\n    aes(y = ..density..),\n    breaks = c(0, 13.5, 19.5, 28.5, 44.1) # il valore BDI-II massimo è 44\n  ) +\n  scale_x_continuous(breaks=c(0, 13.5, 19.5, 28.5, 44.1)) +\n  labs(\n    x = \"BDI-II\",\n    y = \"Densità di frequenza\"\n  )\np1\n```\n\n::: {.cell-output-display}\n![Figura  1: Istogramma delle frequenze relative creato con `ggplot()`.](istogramma_files/figure-html/unnamed-chunk-15-1.svg){fig-align='center'}\n:::\n:::\n\n\nÈ più comune, però, utilizzare classi di ampiezza uguale.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np2 <- bysubj %>%\n  ggplot(aes(x = bdi)) +\n  geom_histogram(\n    aes(y = ..density..),\n    breaks = seq(0, 44.1, length.out = 7)\n  ) +\n  scale_x_continuous(breaks=c(0.00,  7.35, 14.70, 22.05, 29.40, 36.75, 44.10)) +\n  labs(\n    x = \"BDI-II\",\n    y = \"Densità di frequenza\",\n    caption = \"Fonte: Zetsche, Buerkner, & Renneberg (2020)\"\n  )\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1 + p2\n```\n\n::: {.cell-output-display}\n![](istogramma_files/figure-html/unnamed-chunk-18-1.svg){fig-align='center'}\n:::\n:::\n\n\n\n## Limite dell'istogramma\n\nCome abbiamo notato sopra, uno dei limiti degli istogrammi è che il profilo dell'istogramma è arbitrario: a seconda del numero e dei limiti delle classi che vengono scelte, cambiano sia il numero che la forma delle barre dell'istogramma.\n\n\n# La densità della frequenza dei dati \n\nIl problema precedente può essere alleviato utilizzando una rappresentazione alternativa della distribuzione di frequenza, ovvero la stima della *densità della frequenza* dei dati. Un modo semplice per pensare a tale rappresentazione, che in inglese va sotto il nome di *density plot*, è quello di immaginare un grande campione di dati, in modo che diventi possibile definire un enorme numero di classi di equivalenza di ampiezza molto piccola, le quali non risultino vuote. In tali circostanze, la funzione di densità empirica non è altro che il profilo `lisciato' dell'istogramma. La stessa idea si applica anche quando il campione è più piccolo. Un esempio è fornito nella figura seguente.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np3 <- bysubj %>% \n  ggplot(aes(x = bdi)) +\n  geom_histogram(\n    aes(y = ..density..), \n    breaks = seq(0, 44.1, length.out = 7)\n  ) +\n  geom_density(\n    aes(x = bdi), \n    adjust = 0.5, \n    size = 0.8, \n    fill = \"steelblue3\", \n    alpha = 0.5\n  ) +\n  labs(\n    x = \"BDI-II\",\n    y = \"Densità di frequenza\"\n  )\np3\n```\n\n::: {.cell-output-display}\n![Figura  3: Istogramma delle frequenze relative con sovrapposta la stima della densità della frequenza dei dati.](istogramma_files/figure-html/unnamed-chunk-20-1.svg){fig-align='center'}\n:::\n:::\n\n\nGuardando il grafico della densità della frequenza dei dati possiamo notare che ci sono due valori che tendono a ricorrere più spesso nella distribuzione dei punteggi del BDI-II. Il primo valore tipico è di poco superiore allo zero. Il secondo valore tipico è all'incirca uguale a 25. Tali valori tipici si chiamano *mode*.  Nel caso presente è sensato che una moda della distribuzione corrisponda ad un valore BDI-II molto basso, dato che il campione include 36 soggetti sani, e che una moda corrisponda ad un valore BDI-II di depressione moderata/severa, in quanto il campione include 30 soggetti clinicamente depressi. Ovviamente, se vogliamo rappresentare solo la densità della frequenza dei dati (senza l'istogramma) procediamo come indicato qui sotto.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np4 <- bysubj %>% \n  ggplot(aes(x = bdi)) +\n  geom_density(\n    aes(x = bdi), \n    adjust = 0.5, \n    size = 0.8, \n    fill = \"steelblue3\", \n    alpha = 0.5\n  ) +\n  labs(\n    x = \"BDI-II\",\n    y = \"Densità di frequenza\",\n    caption = \"Fonte: Zetsche, Buerkner, & Renneberg (2020)\"\n  )\np4\n```\n\n::: {.cell-output-display}\n![Figura  4: Grafico della stima della densità della frequenza dei dati.](istogramma_files/figure-html/unnamed-chunk-22-1.svg){fig-align='center'}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np3 + p4\n```\n\n::: {.cell-output-display}\n![](istogramma_files/figure-html/unnamed-chunk-23-1.svg){fig-align='center'}\n:::\n:::\n\n\n# Conclusioni\n\n- L'area totale di un istogramma è pari a 1.0.\n- Quando guardiamo un istogramma dobbiamo pensare che l'area di ciascuna barra è uguale alla *frequenza relativa* (ovvero alla proporzione) dei casi che cadono in quella classe.\n- L'istogramma ci dice come si *distribuiscono* (proporzionalmente) le osservazioni di un campione nelle classi che sono state definite.\n- Il fatto che l'area totale dell'istogramma sia unitaria significa che essa è la somma di tutte le proporzioni rappresentate dalla barre dell'istogramma.\n- Il grafico della *funzione di densità empirica* attenua l'arbitrarietà della scelta del numero e della dimensione delle classi dell'istogramma e ci fornisce una rappresentazione grafica maggiormente comprensibile.\n\n\n\n### Informazioni sulla sessione di lavoro {-}\n\n<details>\n<summary>\nSession Info\n</summary>\nSono qui fornite le informazioni sulla sessione di lavoro insieme all'elenco dei pacchetti usati. I pacchetti contrassegnati con un asterisco(*) sono stati usati esplicitamente nello script.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.2 (2022-10-31)\n os       macOS Big Sur ... 10.16\n system   x86_64, darwin17.0\n ui       X11\n language (EN)\n collate  it_IT.UTF-8\n ctype    it_IT.UTF-8\n tz       Europe/Rome\n date     2022-11-22\n pandoc   2.19.2 @ /Applications/RStudio.app/Contents/MacOS/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package       * version date (UTC) lib source\n assertthat      0.2.1   2019-03-21 [1] CRAN (R 4.2.0)\n backports       1.4.1   2021-12-13 [1] CRAN (R 4.2.0)\n bayesplot       1.10.0  2022-11-16 [1] CRAN (R 4.2.0)\n broom           1.0.1   2022-08-29 [1] CRAN (R 4.2.0)\n captioner       2.2.3   2015-07-16 [1] CRAN (R 4.2.0)\n cellranger      1.1.0   2016-07-27 [1] CRAN (R 4.2.0)\n cli             3.4.1   2022-09-23 [1] CRAN (R 4.2.0)\n colorspace      2.0-3   2022-02-21 [1] CRAN (R 4.2.0)\n crayon          1.5.2   2022-09-29 [1] CRAN (R 4.2.0)\n DBI             1.1.3   2022-06-18 [1] CRAN (R 4.2.0)\n dbplyr          2.2.1   2022-06-27 [1] CRAN (R 4.2.0)\n digest          0.6.30  2022-10-18 [1] CRAN (R 4.2.2)\n dplyr         * 1.0.10  2022-09-01 [1] CRAN (R 4.2.0)\n ellipsis        0.3.2   2021-04-29 [1] CRAN (R 4.2.0)\n evaluate        0.18    2022-11-07 [1] CRAN (R 4.2.2)\n fansi           1.0.3   2022-03-24 [1] CRAN (R 4.2.0)\n farver          2.1.1   2022-07-06 [1] CRAN (R 4.2.0)\n fastmap         1.1.0   2021-01-25 [1] CRAN (R 4.2.0)\n forcats       * 0.5.2   2022-08-19 [1] CRAN (R 4.2.0)\n fs              1.5.2   2021-12-08 [1] CRAN (R 4.2.0)\n gargle          1.2.1   2022-09-08 [1] CRAN (R 4.2.0)\n generics        0.1.3   2022-07-05 [1] CRAN (R 4.2.0)\n ggplot2       * 3.4.0   2022-11-04 [1] CRAN (R 4.2.0)\n glue            1.6.2   2022-02-24 [1] CRAN (R 4.2.0)\n googledrive     2.0.0   2021-07-08 [1] CRAN (R 4.2.0)\n googlesheets4   1.0.1   2022-08-13 [1] CRAN (R 4.2.1)\n gtable          0.3.1   2022-09-01 [1] CRAN (R 4.2.0)\n haven           2.5.1   2022-08-22 [1] CRAN (R 4.2.0)\n hms             1.1.2   2022-08-19 [1] CRAN (R 4.2.0)\n htmltools       0.5.3   2022-07-18 [1] CRAN (R 4.2.0)\n htmlwidgets     1.5.4   2021-09-08 [1] CRAN (R 4.2.0)\n httr            1.4.4   2022-08-17 [1] CRAN (R 4.2.1)\n jsonlite        1.8.3   2022-10-21 [1] CRAN (R 4.2.2)\n kableExtra    * 1.3.4   2021-02-20 [1] CRAN (R 4.2.0)\n knitr         * 1.41    2022-11-18 [1] CRAN (R 4.2.2)\n labeling        0.4.2   2020-10-20 [1] CRAN (R 4.2.0)\n lifecycle       1.0.3   2022-10-07 [1] CRAN (R 4.2.1)\n lubridate       1.9.0   2022-11-06 [1] CRAN (R 4.2.0)\n magrittr        2.0.3   2022-03-30 [1] CRAN (R 4.2.0)\n modelr          0.1.10  2022-11-11 [1] CRAN (R 4.2.0)\n munsell         0.5.0   2018-06-12 [1] CRAN (R 4.2.0)\n patchwork     * 1.1.2   2022-08-19 [1] CRAN (R 4.2.0)\n pillar          1.8.1   2022-08-19 [1] CRAN (R 4.2.0)\n pkgconfig       2.0.3   2019-09-22 [1] CRAN (R 4.2.0)\n purrr         * 0.3.5   2022-10-06 [1] CRAN (R 4.2.1)\n R6              2.5.1   2021-08-19 [1] CRAN (R 4.2.0)\n readr         * 2.1.3   2022-10-01 [1] CRAN (R 4.2.1)\n readxl          1.4.1   2022-08-17 [1] CRAN (R 4.2.1)\n reprex          2.0.2   2022-08-17 [1] CRAN (R 4.2.1)\n rlang           1.0.6   2022-09-24 [1] CRAN (R 4.2.0)\n rmarkdown       2.18    2022-11-09 [1] CRAN (R 4.2.0)\n rstudioapi      0.14    2022-08-22 [1] CRAN (R 4.2.0)\n rvest           1.0.3   2022-08-19 [1] CRAN (R 4.2.0)\n scales          1.2.1   2022-08-20 [1] CRAN (R 4.2.0)\n sessioninfo     1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n stringi         1.7.8   2022-07-11 [1] CRAN (R 4.2.1)\n stringr       * 1.4.1   2022-08-20 [1] CRAN (R 4.2.0)\n svglite         2.1.0   2022-02-03 [1] CRAN (R 4.2.0)\n systemfonts     1.0.4   2022-02-11 [1] CRAN (R 4.2.0)\n tibble        * 3.1.8   2022-07-22 [1] CRAN (R 4.2.0)\n tidyr         * 1.2.1   2022-09-08 [1] CRAN (R 4.2.0)\n tidyselect      1.2.0   2022-10-10 [1] CRAN (R 4.2.0)\n tidyverse     * 1.3.2   2022-07-18 [1] CRAN (R 4.2.0)\n timechange      0.1.1   2022-11-04 [1] CRAN (R 4.2.0)\n tzdb            0.3.0   2022-03-28 [1] CRAN (R 4.2.0)\n utf8            1.2.2   2021-07-24 [1] CRAN (R 4.2.0)\n vctrs           0.5.1   2022-11-16 [1] CRAN (R 4.2.0)\n viridisLite     0.4.1   2022-08-22 [1] CRAN (R 4.2.0)\n webshot         0.5.4   2022-09-26 [1] CRAN (R 4.2.0)\n withr           2.5.0   2022-03-03 [1] CRAN (R 4.2.0)\n xfun            0.35    2022-11-16 [1] CRAN (R 4.2.0)\n xml2            1.3.3   2021-11-30 [1] CRAN (R 4.2.0)\n yaml            2.3.6   2022-10-18 [1] CRAN (R 4.2.2)\n\n [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n</details>\n\n\n",
    "supporting": [
      "istogramma_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}